{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Documentos/Github/central_de_erros_UI/src/containers/HomePage/HomePage.js\";\nimport React, { Component } from \"react\";\nimport linkedin from \"../../assets/img/linkedin.svg\";\nimport github from \"../../assets/img/github.svg\";\nimport Typical from 'react-typical';\n\nclass HomePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comingSoon: {\n        \"en-US\": {\n          coming_soon: \"Coming soon\"\n        },\n        \"pt-BR\": {\n          coming_soon: \"Em breve\"\n        }\n      },\n      language: \"en-US\",\n      from: \"\"\n    };\n\n    this.ActionLink = service => {\n      if (process.env.NODE_ENV === 'production') {\n        let action;\n\n        if (this.state.from) {\n          action = \"Clicked in \" + service;\n        } else {\n          action = \"Clicked in \" + service + \" from \" + this.state.from;\n        }\n\n        window.fbq('track', action);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const params = new URLSearchParams(this.props.location.search);\n    const f = params.get('f');\n\n    if (f) {\n      this.setState({\n        from: f\n      });\n\n      if (process.env.NODE_ENV === 'production') {\n        let action;\n        action = \"Get in by \" + f;\n        window.fbq('track', action);\n      }\n    } // let language = window.navigator.userLanguage || window.navigator.language;\n    // if (language !== \"en-US\") {\n    //     this.setState({ language: \"pt-BR\" });\n    // }\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-construcation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: e => this.ActionLink(\"Github\"),\n      class: \"img-link\",\n      href: \"https://www.linkedin.com/in/gabriel-pereira-pinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: linkedin,\n      className: \"img-linkedin\",\n      alt: \"linkedin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      onClick: e => this.ActionLink(\"linkedin\"),\n      class: \"img-link\",\n      href: \"https://github.com/gabrielpereirapinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: github,\n      className: \"img-linkedin\",\n      alt: \"linkedin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/home/gabriel/Documentos/Github/central_de_erros_UI/src/containers/HomePage/HomePage.js"],"names":["React","Component","Typical","HomePage","state","comingSoon","coming_soon","language","from","ActionLink","service","process","env","NODE_ENV","action","window","fbq","componentDidMount","params","URLSearchParams","props","location","search","f","get","setState","render","e","linkedin","github"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport linkedin from '../../assets/img/linkedin.svg';\nimport github from '../../assets/img/github.svg';\nimport Typical from 'react-typical'\n\nclass HomePage extends Component {\n\n    state = {\n        comingSoon: {\n            \"en-US\": {\n                coming_soon: \"Coming soon\",\n            },\n            \"pt-BR\": {\n                coming_soon: \"Em breve\",\n            }\n        },\n        language: \"en-US\",\n        from: \"\"\n    }\n\n    componentDidMount() {\n        const params = new URLSearchParams(this.props.location.search);\n        const f = params.get('f');\n        if (f) {\n            this.setState({ from: f });\n            if (process.env.NODE_ENV === 'production') {\n                let action;\n                action = \"Get in by \" + f;\n                window.fbq('track', action);\n            }\n        }\n        // let language = window.navigator.userLanguage || window.navigator.language;\n\n        // if (language !== \"en-US\") {\n        //     this.setState({ language: \"pt-BR\" });\n        // }\n    }\n\n    ActionLink = (service) => {\n        if (process.env.NODE_ENV === 'production') {\n            let action;\n            if (this.state.from) {\n                action = \"Clicked in \" + service;\n            } else {\n                action = \"Clicked in \" + service + \" from \" + this.state.from;\n            }\n            window.fbq('track', action);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <p className=\"text-construcation\">\n                        \n                    </p>\n                    <div>\n                        <a onClick={(e) => this.ActionLink(\"Github\")} class=\"img-link\" href=\"https://www.linkedin.com/in/gabriel-pereira-pinheiro\">\n                            <img src={linkedin} className=\"img-linkedin\" alt=\"linkedin\" />\n                        </a>\n                        <a onClick={(e) => this.ActionLink(\"linkedin\")} class=\"img-link\" href=\"https://github.com/gabrielpereirapinheiro\">\n                            <img src={github} className=\"img-linkedin\" alt=\"linkedin\" />\n                        </a>\n                    </div>\n\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}